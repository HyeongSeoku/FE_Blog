import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import DefaultLayout from "@/layout/DefaultLayout";
import NoneLayout from "@/layout/NoneLayout";
import { isValidElement, ReactNode } from "react";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: ReactNode;
}

export default function RootLayout({ children }: RootLayoutProps) {
  let layoutType: "default" | "none" = "default";

  if (isValidElement(children) && typeof children.type !== "string") {
    layoutType = (children.type as any).layout || "default";
  }

  const LayoutComponent = layoutType === "none" ? NoneLayout : DefaultLayout;

  return (
    <html lang="en">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </head>
      <body className={inter.className}>
        <LayoutComponent>{children}</LayoutComponent>
      </body>
    </html>
  );
}
